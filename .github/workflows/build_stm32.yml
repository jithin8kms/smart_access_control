name: Build STM32 Bootloader and App

on:
  push:
    #paths:
    #  - 'firmware/stm32/**'
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build-stm32:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install gcc-arm-none-eabi build-essential openssl xxd
        pip install intelhex

    - name: Restore private key
      run: |
        echo "${{ secrets.PRIVATE_KEY }}" > firmware/keys/private.pem
        echo "Private key written to private.pem"

    - name: Build Bootloader
      working-directory: firmware/bootloader
      run: make

    - name: Build App
      working-directory: firmware/app
      run: make
    
    
    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: stm32-firmware
        path: |
          firmware/bootloader/build/bootloader.bin
          firmware/app/build/sac.bin
          firmware/app/build/sac_bin.h
          firmware/app/build/sac.sig

    - name: Cleanup private key
      if: always()
      run: rm -f firmware/keys/private.pem